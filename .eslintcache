[{"/home/geoxhacker/timetables/timetable-scheduler/src/index.js":"1","/home/geoxhacker/timetables/timetable-scheduler/src/App.js":"2","/home/geoxhacker/timetables/timetable-scheduler/src/serviceWorker.js":"3","/home/geoxhacker/timetables/timetable-scheduler/src/Pages/HomeScreen.js":"4","/home/geoxhacker/timetables/timetable-scheduler/src/Pages/LoginScreen.js":"5","/home/geoxhacker/timetables/timetable-scheduler/src/components/Appbar.js":"6","/home/geoxhacker/timetables/timetable-scheduler/src/components/GenerateTimetable.js":"7","/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/subjectInput.js":"8","/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/sectionInput.js":"9","/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/teacherInput.js":"10","/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/workingtimeInput.js":"11","/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/subjectTable.js":"12","/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/sectionTable.js":"13","/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/teacherTable.js":"14","/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/workingtimeTable.js":"15","/home/geoxhacker/timetables/timetable-scheduler/src/components/lectures/lectureInput.js":"16","/home/geoxhacker/timetables/timetable-scheduler/src/constants/docs.js":"17","/home/geoxhacker/timetables/timetable-scheduler/src/components/lectures/lectureTable.js":"18","/home/geoxhacker/timetables/timetable-scheduler/src/firebase/firebase.js":"19","/home/geoxhacker/timetables/timetable-scheduler/src/components/Logo/Logo.js":"20","/home/geoxhacker/timetables/timetable-scheduler/src/components/timetable.js":"21"},{"size":286,"mtime":1692204745991,"results":"22","hashOfConfig":"23"},{"size":382,"mtime":1692204745983,"results":"24","hashOfConfig":"23"},{"size":5086,"mtime":1692204745991,"results":"25","hashOfConfig":"23"},{"size":7952,"mtime":1692701660140,"results":"26","hashOfConfig":"23"},{"size":1781,"mtime":1692772697669,"results":"27","hashOfConfig":"23"},{"size":2931,"mtime":1692702119818,"results":"28","hashOfConfig":"23"},{"size":682,"mtime":1692204745983,"results":"29","hashOfConfig":"23"},{"size":4990,"mtime":1692723628692,"results":"30","hashOfConfig":"23"},{"size":2711,"mtime":1692726134673,"results":"31","hashOfConfig":"23"},{"size":2658,"mtime":1692204745983,"results":"32","hashOfConfig":"23"},{"size":4457,"mtime":1692204745983,"results":"33","hashOfConfig":"23"},{"size":11096,"mtime":1692204745987,"results":"34","hashOfConfig":"23"},{"size":10886,"mtime":1692204745987,"results":"35","hashOfConfig":"23"},{"size":10851,"mtime":1692204745987,"results":"36","hashOfConfig":"23"},{"size":10987,"mtime":1692204745987,"results":"37","hashOfConfig":"23"},{"size":7022,"mtime":1692777588065,"results":"38","hashOfConfig":"23"},{"size":202,"mtime":1692204745987,"results":"39","hashOfConfig":"23"},{"size":11613,"mtime":1692387724146,"results":"40","hashOfConfig":"23"},{"size":938,"mtime":1692252883177,"results":"41","hashOfConfig":"23"},{"size":1184,"mtime":1692204745987,"results":"42","hashOfConfig":"23"},{"size":2420,"mtime":1692726938925,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"alpyft",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"53","messages":"54","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"55","usedDeprecatedRules":"46"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"69","messages":"70","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"77","messages":"78","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"46"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"88","messages":"89","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"90"},"/home/geoxhacker/timetables/timetable-scheduler/src/index.js",[],["91","92"],"/home/geoxhacker/timetables/timetable-scheduler/src/App.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/serviceWorker.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/Pages/HomeScreen.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/Pages/LoginScreen.js",["93","94"],"import React, { useEffect, useState } from \"react\"\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\nimport firebase from \"../firebase/firebase\"\nimport Logo from \"../components/Logo/Logo\"\n// import Particles from \"react-particles-js\"\nimport Loader from \"react-loader-spinner\"\n\nconst particlesOptions = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 100,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 700,\n\t\t\t},\n\t\t},\n\t},\n}\n\nconst LoginScreen = ({ setIsSigned }) => {\n\tconst [loading, setLoading] = useState(true)\n\n\tlet uiConfig = {\n\t\tsignInFlow: \"popup\",\n\t\tsignInOptions: [\n\t\t\tfirebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.EmailAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.FacebookAuthProvider.PROVIDER_ID,\n\t\t],\n\t\tcallbacks: {\n\t\t\tsignInSuccessWithAuthResult: () => false,\n\t\t},\n\t}\n\tuseEffect(() => {\n\t\tlet isMounted = true\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\t// setIsLoggedIn(!!user)\n\t\t\tif (user) {\n\t\t\t\tsetIsSigned(true)\n\t\t\t\tconsole.log(\"User Logged In\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User Signed Out\")\n\t\t\t\tsetIsSigned(false)\n\t\t\t}\n\t\t\tif (isMounted) setLoading(false)\n\t\t})\n\t\treturn () => (isMounted = false)\n\t}, [setIsSigned])\n\treturn (\n\t\t<div>\n\t\t\t{loading ? (\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<div id=\"logo-name\">Bombo Time Table Generator</div>\n\t\t\t\t\t<Loader\n\t\t\t\t\t\tcolor=\"#FFFFFF\"\n\t\t\t\t\t\twidth={200}\n\t\t\t\t\t\theight={130}\n\t\t\t\t\t\ttype=\"Audio\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{/* <Particles className=\"particles\" params={particlesOptions} /> */}\n\t\t\t\t\t{/* <Logo></Logo> */}\n\t\t\t\t\t<div id=\"logo-name\">Bombo Time Table Generator</div>\n\t\t\t\t\t<div className=\"firebaseUI\">\n\t\t\t\t\t\t<StyledFirebaseAuth\n\t\t\t\t\t\t\tuiConfig={uiConfig}\n\t\t\t\t\t\t\tfirebaseAuth={firebase.auth()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\nexport default LoginScreen\n","/home/geoxhacker/timetables/timetable-scheduler/src/components/Appbar.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/GenerateTimetable.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/subjectInput.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/sectionInput.js",["95"],"import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Card,  Button } from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    borderRadius: 20,\n    margin: 10,\n    minHeight: 360,\n    display: 'grid',\n  },\n  title: {\n    fontSize: 14,\n  },\n  textField: {\n    margin: 5,\n  },\n\n  button: {\n  },\n}));\n\nexport default function SectionInput({ sections, setSections }) {\n  const classes = useStyles();\n\n  const [title, setTitle] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n\n  const [titleError, setTitleError] = React.useState(\"\");\n  const [codeError, setCodeError] = React.useState(\"\");\n\n  const titleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const codeChange = (event) => {\n    setCode(event.target.value);\n  };\n\n  const setRequiredError = () => {\n    !title ? setTitleError(\"Required\") : setTitleError(\"\");\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\n  };\n\n  const setEmptyTextfields = () => {\n    setTitle(\"\");\n    setCode(\"\");\n\n    setTitleError(\"\");\n    setCodeError(\"\");\n  };\n  const addButton = () => {\n    let temp = [...sections];\n    if (title && code) {\n      if (temp) {\n        if (temp.findIndex((e) => e[1] === code) === -1)\n          temp.push([title, code]);\n        else {\n          setRequiredError();\n          setCodeError(\"Subject already exists\");\n          return;\n        }\n      } else temp = [[title, code]];\n\n      setSections(temp, docs.sections);\n      // setEmptyTextfields();\n    } else {\n      setRequiredError();\n    }\n  };\n  return (\n    <Card className={classes.root}>\n      <h3>Add Section</h3>\n      <div>\n        <TextField\n          className={classes.textField}\n          required\n          id=\"class-title\"\n          label=\"Class Title\"\n          variant=\"outlined\"\n          value={title}\n          onChange={titleChange}\n          error={!!titleError}\n          helperText={titleError}\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          className={classes.textField}\n          id=\"class-code\"\n          label=\"Class Code\"\n          variant=\"outlined\"\n          error={!!codeError}\n          helperText={codeError}\n          value={code}\n          onChange={codeChange}\n          onKeyDown={(e) => {\n            if (e.keyCode === 13) addButton();\n          }}\n        />\n      </div>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          onClick={addButton}\n        >\n          + Add Section\n        </Button>\n      </div>\n    </Card>\n  );\n}\n","/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/teacherInput.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/InputCards/workingtimeInput.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/subjectTable.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/sectionTable.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/teacherTable.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/Tables/workingtimeTable.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/lectures/lectureInput.js",["96"],"import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Card,\n  CardContent,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 10,\n    borderRadius: 20,\n  },\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"5% 10%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n    },\n  },\n  textField: {\n    margin: 5,\n    minWidth: 200,\n  },\n  button: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: \"5%\",\n    },\n  },\n}));\n\n// const lectureArrangement = [[\"1\"], [\"1 - 1\", \"2\"], [\"1 - 1 - 1\", \"2 - 1\"], [\"1 - 1 - 1 - 1\", \"2 - 2\", \"3 - 1\"]];\nconst lectureArrangement = [[\"1\"], [\"1 - 1\"], [\"1 - 1 - 1\", \"2 - 1\"], [\"1 - 1 - 1 - 1\", \"2 - 2\", \"3 - 1\"]];\nexport default function LectureInput({\n  lectures,\n  setLectures,\n  subjects,\n  sections,\n  teachers,\n}) {\n  const classes = useStyles();\n  const [subject, setsubject] = useState(\"\");\n  const [section, setsection] = useState(\"\");\n  const [teacher, setteacher] = useState(\"\");\n  const [lectureArr, setlectureArr] = useState(\"\");\n\n  const [subjectError, setsubjectError] = useState(\"\");\n  const [sectionError, setsectionError] = useState(\"\");\n  const [teacherError, setteacherError] = useState(\"\");\n  const [lecturearrError, setlecturearrError] = useState(\"\");\n\n  const subjectChange = (event) => {\n    setlectureArr(\"\");\n    setsubject(event.target.value);\n  };\n\n  const sectionChange = (event) => {\n    setsection(event.target.value);\n  };\n\n  const teacherChange = (event) => {\n    setteacher(event.target.value);\n  };\n\n  const lecturesChange = (event) => {\n    setlectureArr(event.target.value);\n  };\n\n  const setRequiredError = () => {\n    !subject ? setsubjectError(\"Required\") : setsubjectError(\"\");\n    !teacher ? setteacherError(\"Required\") : setteacherError(\"\");\n    !section ? setsectionError(\"Required\") : setsectionError(\"\");\n    !lectureArr ? setlecturearrError(\"Required\") : setlecturearrError(\"\");\n  };\n\n  const setEmptyTextfields = () => {\n    setlectureArr(\"\");\n    setsubject(\"\");\n    setteacher(\"\");\n    setsection(\"\");\n\n    setsubjectError(\"\");\n    setteacherError(\"\");\n    setsectionError(\"\");\n    setlecturearrError(\"\");\n  };\n\n  const addButton = () => {\n    if (subject && teacher && section && lectureArr) {\n      let temp = [...lectures];\n      \n      if (lectures) {\n        // if (\n        //   temp.findIndex(\n        //     (e) =>\n        //       e[4] === teacher + section ||\n        //       (e[1] === section && e[2] === subject)\n        //   ) === -1\n        // )\n          temp.push([teacher, section, subject, lectureArr, teacher + section]);\n        // else {\n        //   setRequiredError();\n        //   setteacherError(\"Lecture already exists\");\n        //   setsubjectError(\"Lecture already exists\");\n        //   setsectionError(\"Lecture already exists\");\n        //   return;\n        // }\n      } else\n        temp = [[teacher, section, subject, lectureArr, teacher + section]];\n\n      setLectures(temp, docs.lectures);\n      // setEmptyTextfields();\n      console.log(\"added ...\")\n    } else setRequiredError();\n  };\n\n  const selectedIndex = (array, element, index) =>\n    array[array.findIndex((e) => e[index] === element)];\n\n  const subjectIndex = selectedIndex(subjects, subject, 1);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <h3 style={{ textAlign: \"left\" }}>Add Lectures</h3>\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"teacher\"\n            label=\"Teacher\"\n            select\n            required\n            error={!!teacherError}\n            helperText={teacherError}\n            onChange={teacherChange}\n            value={teacher}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {teachers.map((option) => (\n              <MenuItem\n                key={option[1] ? option[1] : \"teacher\"}\n                value={option[0]}\n              >\n                {option[0]}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"section\"\n            label=\"Section\"\n            select\n            required\n            error={!!sectionError}\n            helperText={sectionError}\n            onChange={sectionChange}\n            value={section}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {sections.map((option) => (\n              <MenuItem\n                key={option[1] ? option[1] : \"section\"}\n                value={option[1]}\n              >\n                {option[1]}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"subject\"\n            label=\"Subject\"\n            select\n            required\n            error={!!subjectError}\n            helperText={subjectError}\n            onChange={subjectChange}\n            value={subject}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {subjects.map((option) => (\n              <MenuItem\n                key={option[1] ? option[1] : \"subject\"}\n                value={option[1]}\n              >\n                {option[1]}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"lecture\"\n            label=\"Lesson Arrangement\"\n            select\n            required\n            error={!!lecturearrError}\n            helperText={lecturearrError}\n            onChange={lecturesChange}\n            value={lectureArr}\n            disabled={!subject}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) addButton();\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {subject && subjectIndex ? (\n              lectureArrangement[subjectIndex[2] - 1]\n              .map((option) => (\n                <MenuItem key={option ? option : \"lecture\"} value={option}>\n                  {option}\n                </MenuItem>\n              ))\n            ) : (\n              <MenuItem></MenuItem>\n            )}\n          </TextField>\n        </div>\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          onClick={addButton}\n        >\n          + Add Lecture\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","/home/geoxhacker/timetables/timetable-scheduler/src/constants/docs.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/lectures/lectureTable.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/firebase/firebase.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/Logo/Logo.js",[],"/home/geoxhacker/timetables/timetable-scheduler/src/components/timetable.js",[],["97","98"],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":12},{"ruleId":"103","severity":1,"message":"107","line":8,"column":7,"nodeType":"105","messageId":"106","endLine":8,"endColumn":23},{"ruleId":"103","severity":1,"message":"108","line":46,"column":9,"nodeType":"105","messageId":"106","endLine":46,"endColumn":27},{"ruleId":"103","severity":1,"message":"108","line":82,"column":9,"nodeType":"105","messageId":"106","endLine":82,"endColumn":27},{"ruleId":"99","replacedBy":"109"},{"ruleId":"101","replacedBy":"110"},"no-native-reassign",["111"],"no-negated-in-lhs",["112"],"no-unused-vars","'Logo' is defined but never used.","Identifier","unusedVar","'particlesOptions' is assigned a value but never used.","'setEmptyTextfields' is assigned a value but never used.",["111"],["112"],"no-global-assign","no-unsafe-negation"]