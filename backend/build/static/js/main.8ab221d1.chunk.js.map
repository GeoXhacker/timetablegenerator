{"version":3,"sources":["firebase/firebase.js","components/Logo/activity.png","components/Logo/Logo.js","Pages/LoginScreen.js","components/Appbar.js","constants/docs.js","components/InputCards/subjectInput.js","components/InputCards/sectionInput.js","components/InputCards/teacherInput.js","components/Tables/subjectTable.js","components/Tables/sectionTable.js","components/Tables/teacherTable.js","components/lectures/lectureInput.js","components/lectures/lectureTable.js","components/InputCards/workingtimeInput.js","components/Tables/workingtimeTable.js","components/timetable.js","components/GenerateTimetable.js","Pages/HomeScreen.js","App.js","serviceWorker.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","databaseURL","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","useStyle","makeStyles","theme","root","display","justifyContent","breakpoints","up","margin","marginTop","Tilt","background","borderRadius","boxShadow","down","alignItems","width","Logo","classes","className","options","max","style","height","src","activity","paddingTop","alt","LoginScreen","setIsSigned","useState","loading","setLoading","uiConfig","signInFlow","signInOptions","GoogleAuthProvider","PROVIDER_ID","EmailAuthProvider","FacebookAuthProvider","callbacks","signInSuccessWithAuthResult","useEffect","isMounted","onAuthStateChanged","user","console","log","id","color","type","firebaseAuth","useStyles","grow","flexGrow","title","sectionDesktop","sectionMobile","PrimaryAppBar","React","mobileMoreAnchorEl","setMobileMoreAnchorEl","isMobileMenuOpen","Boolean","renderMobileMenu","Menu","anchorEl","anchorOrigin","vertical","horizontal","keepMounted","transformOrigin","open","onClose","MenuItem","IconButton","aria-label","aria-haspopup","AccountCircle","currentUser","displayName","onClick","signOut","ExitToApp","AppBar","position","Toolbar","Typography","variant","noWrap","edge","event","currentTarget","MoreVert","docs","subjects","sections","teachers","lectures","workingTime","timeTable","minHeight","fontSize","textField","hrs","hours","button","SubjectInput","setSubjects","setTitle","code","setCode","contactHrs","setcontantHrs","creditHrs","setcreditHrs","titleError","setTitleError","codeError","setCodeError","contantHrsError","setcontantHrsError","creditHrsError","setcreditHrsError","setRequiredError","addButton","temp","findIndex","e","push","Card","TextField","onChange","target","value","required","label","error","helperText","select","InputLabelProps","shrink","map","option","key","onKeyDown","keyCode","Button","size","SectionInput","setSections","TeacherInput","setTeachers","name","setName","nameError","setNameError","createData","contantHrs","descendingComparator","a","b","orderBy","headCells","numeric","disablePadding","EnhancedTableHead","props","onSelectAllClick","order","numSelected","rowCount","onRequestSort","TableHead","TableRow","TableCell","padding","Checkbox","indeterminate","checked","inputProps","headCell","align","sortDirection","TableSortLabel","active","direction","property","visuallyHidden","useToolbarStyles","paddingLeft","spacing","paddingRight","highlight","palette","secondary","main","backgroundColor","lighten","light","text","primary","dark","flex","EnhancedTableToolbar","selected","setSelected","clsx","component","Tooltip","forEach","element","splice","paper","marginBottom","table","border","clip","overflow","top","SubjectTable","rows","subject","setOrder","setOrderBy","page","setPage","rowsPerPage","setRowsPerPage","emptyRows","Math","min","length","Paper","TableContainer","Table","aria-labelledby","newSelecteds","n","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","hover","selectedIndex","newSelected","concat","handleClick","role","aria-checked","tabIndex","scope","colSpan","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","SectionTable","section","TeacherTable","teacher","minWidth","content","marginLeft","lectureArrangement","LectureInput","setLectures","setsubject","setsection","setteacher","lectureArr","setlectureArr","subjectError","setsubjectError","sectionError","setsectionError","teacherError","setteacherError","lecturearrError","setlecturearrError","subjectIndex","CardContent","textAlign","disabled","arrangement","lectureID","LectureTable","lecture","WorkingtimeInput","setworkingTime","day","setday","period","setperiod","dayError","setdayError","periodError","setperiodError","Object","entries","filter","WorkingtimeTable","time","lectureCount","StyledTableCell","withStyles","head","common","black","white","body","StyledTableRow","action","weekDays","Timetable","i","r","j","cardHolder","flexFlow","GenerateTimetable","timetable","keys","sec","genButton","wrapper","buttonProgress","footer","letterSpacing","fontWeight","weekSchedule","MON","TUE","WED","THU","FRI","SAT","HomeScreen","userRef","firestore","collection","uid","setloading","undefined","setTimetable","updateDB","sub","docType","doc","set","then","catch","fetchTimetable","useCallback","db","onSnapshot","snapshot","empty","lecSec","snap","values","data","fetchRecords","get","snapShot","records","card","requestOptions","method","headers","JSON","stringify","userID","fetch","response","json","CircularProgress","href","App","isSigned","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.8ab221d1.chunk.js","sourcesContent":["import firebase from 'firebase';\n\n// const firebaseConfig = {\n// \tapiKey: process.env.REACT_APP_API_KEY,\n// \tauthDomain: process.env.REACT_APP_AUTH_DOMAIN,\n// \tdatabaseURL: process.env.REACT_APP_DATABASE_URL,\n// \tprojectId: process.env.REACT_APP_PROJECT_ID,\n// \tstorageBucket: process.env.REACT_APP_STORAGE_BUCKET,\n// \tmessagingSenderId: process.env.REACT_APP_SENDER_ID,\n// \tappId: process.env.REACT_APP_APP_ID,\n// };\n\nconst firebaseConfig = {\n\tapiKey: \"AIzaSyC6uHOzSbVjaEn3jGp3wlYCaMIfnPvsLuI\",\n\tauthDomain: \"restaurantapp-16561.firebaseapp.com\",\n\tdatabaseURL: \"https://restaurantapp-16561-default-rtdb.asia-southeast1.firebasedatabase.app\",\n\tprojectId: \"restaurantapp-16561\",\n\tstorageBucket: \"restaurantapp-16561.appspot.com\",\n\tmessagingSenderId: \"114474673016\",\n\tappId: \"1:114474673016:web:83c69405986179c5269e8d\",\n\tmeasurementId: \"G-M3VQMQT5J8\"\n  };\n\nfirebase.initializeApp(firebaseConfig);\nfirebase.auth();\n\nexport default firebase;\n","export default __webpack_public_path__ + \"static/media/activity.27d1907b.png\";","import React from \"react\";\r\nimport Tilt from \"react-tilt\";\r\nimport activity from \"./activity.png\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\n\r\nconst useStyle = makeStyles((theme) => ({\r\n  root: {\r\n    display: \"flex\",\r\n    justifyContent: \"center\",\r\n    [theme.breakpoints.up(\"sm\")]: {\r\n      margin: \"2rem\",\r\n      marginTop: 0,\r\n    },\r\n  },\r\n  Tilt: {\r\n    background: \"linear-gradient(89deg, #ff5edf 0%, #04c8de 100%)\",\r\n    borderRadius: \".25rem\",\r\n    boxShadow: \"0px 0px 8px 2px rgba( 0, 0, 0, 0.2 )\",\r\n    [theme.breakpoints.down(\"xs\")]: {\r\n      display: \"flex\",\r\n      alignItems: \"center\",\r\n      marginTop: \"20%\",\r\n      width: \"600px\",\r\n    },\r\n  },\r\n}));\r\n\r\nconst Logo = () => {\r\n  const classes = useStyle();\r\n  return (\r\n    <div className={classes.root}>\r\n      <Tilt\r\n        className={classes.Tilt}\r\n        options={{ max: 25 }}\r\n        style={{ height: 400, width: 600 }}\r\n      >\r\n        <div className=\"Tilt-inner pa3\">\r\n          <img\r\n            src={activity}\r\n            style={{ paddingTop: \"5px\" }}\r\n            alt=\"activity scheduling\"\r\n          ></img>\r\n        </div>\r\n      </Tilt>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Logo;\r\n","import React, { useEffect, useState } from \"react\"\nimport StyledFirebaseAuth from \"react-firebaseui/StyledFirebaseAuth\"\nimport firebase from \"../firebase/firebase\"\nimport Logo from \"../components/Logo/Logo\"\n// import Particles from \"react-particles-js\"\nimport Loader from \"react-loader-spinner\"\n\nconst particlesOptions = {\n\tparticles: {\n\t\tnumber: {\n\t\t\tvalue: 100,\n\t\t\tdensity: {\n\t\t\t\tenable: true,\n\t\t\t\tvalue_area: 700,\n\t\t\t},\n\t\t},\n\t},\n}\n\nconst LoginScreen = ({ setIsSigned }) => {\n\tconst [loading, setLoading] = useState(true)\n\n\tlet uiConfig = {\n\t\tsignInFlow: \"popup\",\n\t\tsignInOptions: [\n\t\t\tfirebase.auth.GoogleAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.EmailAuthProvider.PROVIDER_ID,\n\t\t\tfirebase.auth.FacebookAuthProvider.PROVIDER_ID,\n\t\t],\n\t\tcallbacks: {\n\t\t\tsignInSuccessWithAuthResult: () => false,\n\t\t},\n\t}\n\tuseEffect(() => {\n\t\tlet isMounted = true\n\t\tfirebase.auth().onAuthStateChanged((user) => {\n\t\t\t// setIsLoggedIn(!!user)\n\t\t\tif (user) {\n\t\t\t\tsetIsSigned(true)\n\t\t\t\tconsole.log(\"User Logged In\")\n\t\t\t} else {\n\t\t\t\tconsole.log(\"User Signed Out\")\n\t\t\t\tsetIsSigned(false)\n\t\t\t}\n\t\t\tif (isMounted) setLoading(false)\n\t\t})\n\t\treturn () => (isMounted = false)\n\t}, [setIsSigned])\n\treturn (\n\t\t<div>\n\t\t\t{loading ? (\n\t\t\t\t<div className=\"loading\">\n\t\t\t\t\t<div id=\"logo-name\">Bombo Time Table Generator</div>\n\t\t\t\t\t<Loader\n\t\t\t\t\t\tcolor=\"#FFFFFF\"\n\t\t\t\t\t\twidth={200}\n\t\t\t\t\t\theight={130}\n\t\t\t\t\t\ttype=\"Audio\"\n\t\t\t\t\t/>\n\t\t\t\t</div>\n\t\t\t) : (\n\t\t\t\t<div>\n\t\t\t\t\t{/* <Particles className=\"particles\" params={particlesOptions} /> */}\n\t\t\t\t\t<Logo></Logo>\n\t\t\t\t\t<div className=\"firebaseUI\">\n\t\t\t\t\t\t<StyledFirebaseAuth\n\t\t\t\t\t\t\tuiConfig={uiConfig}\n\t\t\t\t\t\t\tfirebaseAuth={firebase.auth()}\n\t\t\t\t\t\t/>\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t)}\n\t\t</div>\n\t)\n}\nexport default LoginScreen\n","import React from \"react\"\nimport {\n\tmakeStyles,\n\tAppBar,\n\tToolbar,\n\tIconButton,\n\tTypography,\n\tMenuItem,\n\tMenu,\n} from \"@material-ui/core\"\nimport { ExitToApp, MoreVert, AccountCircle } from \"@material-ui/icons\"\nimport firebase from \"firebase\"\n\nconst useStyles = makeStyles((theme) => ({\n\tgrow: {\n\t\tflexGrow: 1,\n\t},\n\ttitle: {\n\t\tdisplay: \"block\",\n\t},\n\tsectionDesktop: {\n\t\tdisplay: \"none\",\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"flex\",\n\t\t},\n\t},\n\tsectionMobile: {\n\t\tdisplay: \"flex\",\n\t\t[theme.breakpoints.up(\"md\")]: {\n\t\t\tdisplay: \"none\",\n\t\t},\n\t},\n}))\n\nexport default function PrimaryAppBar() {\n\tconst classes = useStyles()\n\tconst [mobileMoreAnchorEl, setMobileMoreAnchorEl] = React.useState(null)\n\n\tconst isMobileMenuOpen = Boolean(mobileMoreAnchorEl)\n\n\tconst handleMobileMenuClose = () => {\n\t\tsetMobileMoreAnchorEl(null)\n\t}\n\n\tconst handleMobileMenuOpen = (event) => {\n\t\tsetMobileMoreAnchorEl(event.currentTarget)\n\t}\n\n\tconst renderMobileMenu = (\n\t\t<Menu\n\t\t\tanchorEl={mobileMoreAnchorEl}\n\t\t\tanchorOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\tkeepMounted\n\t\t\ttransformOrigin={{ vertical: \"top\", horizontal: \"right\" }}\n\t\t\topen={isMobileMenuOpen}\n\t\t\tonClose={handleMobileMenuClose}\n\t\t>\n\t\t\t<MenuItem>\n\t\t\t\t<IconButton\n\t\t\t\t\taria-label=\"Logged In User\"\n\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t>\n\t\t\t\t\t<AccountCircle />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>\n\t\t\t\t\t{firebase.auth().currentUser\n\t\t\t\t\t\t? firebase.auth().currentUser.displayName\n\t\t\t\t\t\t: \"Guest\"}\n\t\t\t\t</p>\n\t\t\t</MenuItem>\n\t\t\t<MenuItem\n\t\t\t\tonClick={() => {\n\t\t\t\t\tfirebase.auth().signOut()\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<IconButton aria-label=\"SignOut\" color=\"inherit\">\n\t\t\t\t\t<ExitToApp />\n\t\t\t\t</IconButton>\n\t\t\t\t<p>Sign Out</p>\n\t\t\t</MenuItem>\n\t\t</Menu>\n\t)\n\n\treturn (\n\t\t<div className={classes.grow}>\n\t\t\t<AppBar position=\"fixed\">\n\t\t\t\t<Toolbar>\n\t\t\t\t\t<Typography className={classes.title} variant=\"h6\" noWrap>\n\t\t\t\t\t\tBombo Time Table Generator\n\t\t\t\t\t</Typography>\n\t\t\t\t\t<div className={classes.grow} />\n\t\t\t\t\t<div className={classes.sectionDesktop}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\taria-label=\"Logged In User\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<AccountCircle />\n\t\t\t\t\t\t\t<div className=\"f3\">\n\t\t\t\t\t\t\t\t{firebase.auth().currentUser\n\t\t\t\t\t\t\t\t\t? firebase.auth().currentUser.displayName\n\t\t\t\t\t\t\t\t\t: \"Ehmad\"}\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\tedge=\"end\"\n\t\t\t\t\t\t\taria-label=\"Sign Out\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={() => {\n\t\t\t\t\t\t\t\tfirebase.auth().signOut()\n\t\t\t\t\t\t\t\tconsole.log(\"signout\")\n\t\t\t\t\t\t\t}}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<ExitToApp />\n\t\t\t\t\t\t\t<div className=\"f5\">Sign Out</div>\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className={classes.sectionMobile}>\n\t\t\t\t\t\t<IconButton\n\t\t\t\t\t\t\taria-label=\"show more\"\n\t\t\t\t\t\t\taria-haspopup=\"true\"\n\t\t\t\t\t\t\tonClick={handleMobileMenuOpen}\n\t\t\t\t\t\t\tcolor=\"inherit\"\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t<MoreVert />\n\t\t\t\t\t\t</IconButton>\n\t\t\t\t\t</div>\n\t\t\t\t</Toolbar>\n\t\t\t</AppBar>\n\t\t\t{renderMobileMenu}\n\t\t</div>\n\t)\n}\n","const docs = {\r\n  subjects: \"subjects\",\r\n  sections: \"sections\",\r\n  teachers: \"teachers\",\r\n  lectures: \"lectures\",\r\n  workingTime: \"workingTime\",\r\n  timeTable: \"timeTable\",\r\n};\r\n\r\nexport default docs;\r\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Card,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    margin: 10,\n    borderRadius: 20,\n    minHeight: 360,\n  },\n  title: {\n    fontSize: 14,\n  },\n  textField: {\n    margin: 5,\n  },\n  hrs: {\n    margin: \"5% 10%\",\n  },\n  hours: {\n    display: \"flex\",\n    justifyContent: \"center\",\n    alignItems: \"baseline\",\n  },\n  button: {},\n}));\n\nexport default function SubjectInput({ subjects, setSubjects }) {\n  const classes = useStyles();\n\n  const [title, setTitle] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n  const [contactHrs, setcontantHrs] = React.useState(4);\n  const [creditHrs, setcreditHrs] = React.useState(4);\n\n  const [titleError, setTitleError] = React.useState(\"\");\n  const [codeError, setCodeError] = React.useState(\"\");\n  const [contantHrsError, setcontantHrsError] = React.useState(\"\");\n  const [creditHrsError, setcreditHrsError] = React.useState(\"\");\n\n  const titleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const codeChange = (event) => {\n    setCode(event.target.value);\n  };\n  const contacthrsChange = (event) => {\n    setcontantHrs(event.target.value);\n  };\n  const creditrsChange = (event) => {\n    setcreditHrs(event.target.value);\n  };\n  const setRequiredError = () => {\n    !title ? setTitleError(\"Required\") : setTitleError(\"\");\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\n    !contactHrs ? setcontantHrsError(\"Required\") : setcontantHrsError(\"\");\n    !creditHrs ? setcreditHrsError(\"Required\") : setcreditHrsError(\"\");\n  };\n  const setEmptyTextfields = () => {\n    setTitle(\"\");\n    setCode(\"\");\n    // setcontantHrs(\"\");\n    // setcreditHrs(\"\");\n\n    setTitleError(\"\");\n    setCodeError(\"\");\n    setcontantHrsError(\"\");\n    setcreditHrsError(\"\");\n  };\n  const addButton = () => {\n    let temp = [...subjects];\n    if (title && code && contactHrs && creditHrs) {\n      if (creditHrs <= contactHrs) {\n        if (temp) {\n          if (temp.findIndex((e) => e[1] === code) === -1)\n            temp.push([title, code, contactHrs, creditHrs]);\n          else {\n            setRequiredError();\n            setCodeError(\"Subject already exists\");\n            return;\n          }\n        } else temp = [[title, code, contactHrs, creditHrs]];\n        setSubjects(temp, docs.subjects);\n        setEmptyTextfields();\n      } else {\n        setcontantHrsError(\"CreditHrs can't exceed contactHrs\");\n      }\n    } else {\n      setRequiredError();\n    }\n  };\n  return (\n    <Card className={classes.root}>\n      <h3>Add Subject</h3>\n      <div>\n        <TextField\n          className={!titleError ? classes.textField : \"\"}\n          onChange={titleChange}\n          value={title}\n          required\n          id=\"course-title\"\n          label=\"Title\"\n          variant=\"outlined\"\n          error={!!titleError}\n          helperText={titleError}\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          className={!codeError ? classes.textField : \"\"}\n          value={code}\n          onChange={codeChange}\n          id=\"course-code\"\n          label=\"Course Code\"\n          variant=\"outlined\"\n          error={!!codeError}\n          helperText={codeError}\n        />\n      </div>\n      <div className={classes.hours}>\n        <TextField\n          type=\"number\"\n          className={!creditHrsError ? classes.hrs : \"\"}\n          id=\"credit-hours\"\n          label=\"Credit Hours\"\n          select\n          required\n          error={!!creditHrsError}\n          helperText={creditHrsError}\n          onChange={creditrsChange}\n          value={creditHrs}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n        >\n          {[1, 2, 3].map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n        <TextField\n          type=\"number\"\n          className={!contantHrsError ? classes.hrs : \"\"}\n          id=\"contact-hours\"\n          label=\"Contact Hours\"\n          select\n          required\n          error={!!contantHrsError}\n          helperText={contantHrsError}\n          onChange={contacthrsChange}\n          value={contactHrs}\n          onKeyDown={(e) => {\n            if (e.keyCode === 13) addButton();\n          }}\n          InputLabelProps={{\n            shrink: true,\n          }}\n          variant=\"outlined\"\n        >\n          {[1, 2, 3].map((option) => (\n            <MenuItem key={option} value={option}>\n              {option}\n            </MenuItem>\n          ))}\n        </TextField>\n      </div>\n      <Button\n        className={classes.button}\n        variant=\"contained\"\n        color=\"primary\"\n        size=\"medium\"\n        onClick={addButton}\n      >\n        + Add Subject\n      </Button>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Card,  Button } from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    borderRadius: 20,\n    margin: 10,\n    minHeight: 360,\n    display: 'grid',\n  },\n  title: {\n    fontSize: 14,\n  },\n  textField: {\n    margin: 5,\n  },\n\n  button: {\n  },\n}));\n\nexport default function SectionInput({ sections, setSections }) {\n  const classes = useStyles();\n\n  const [title, setTitle] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n\n  const [titleError, setTitleError] = React.useState(\"\");\n  const [codeError, setCodeError] = React.useState(\"\");\n\n  const titleChange = (event) => {\n    setTitle(event.target.value);\n  };\n  const codeChange = (event) => {\n    setCode(event.target.value);\n  };\n\n  const setRequiredError = () => {\n    !title ? setTitleError(\"Required\") : setTitleError(\"\");\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\n  };\n\n  const setEmptyTextfields = () => {\n    setTitle(\"\");\n    setCode(\"\");\n\n    setTitleError(\"\");\n    setCodeError(\"\");\n  };\n  const addButton = () => {\n    let temp = [...sections];\n    if (title && code) {\n      if (temp) {\n        if (temp.findIndex((e) => e[1] === code) === -1)\n          temp.push([title, code]);\n        else {\n          setRequiredError();\n          setCodeError(\"Subject already exists\");\n          return;\n        }\n      } else temp = [[title, code]];\n\n      setSections(temp, docs.sections);\n      setEmptyTextfields();\n    } else {\n      setRequiredError();\n    }\n  };\n  return (\n    <Card className={classes.root}>\n      <h3>Add Section</h3>\n      <div>\n        <TextField\n          className={classes.textField}\n          required\n          id=\"class-title\"\n          label=\"Class Title\"\n          variant=\"outlined\"\n          value={title}\n          onChange={titleChange}\n          error={!!titleError}\n          helperText={titleError}\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          className={classes.textField}\n          id=\"class-code\"\n          label=\"Class Code\"\n          variant=\"outlined\"\n          error={!!codeError}\n          helperText={codeError}\n          value={code}\n          onChange={codeChange}\n          onKeyDown={(e) => {\n            if (e.keyCode === 13) addButton();\n          }}\n        />\n      </div>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          onClick={addButton}\n        >\n          + Add Section\n        </Button>\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { TextField, Card, Button } from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // minWidth: 275,\n    borderRadius: 20,\n    margin: 10,\n    minHeight: 360,\n    display: \"grid\",\n  },\n  textField: {\n    margin: 5,\n  },\n  button: {},\n}));\n\nexport default function TeacherInput({ teachers, setTeachers }) {\n  const classes = useStyles();\n\n  const [name, setName] = React.useState(\"\");\n  const [code, setCode] = React.useState(\"\");\n\n  const [nameError, setNameError] = React.useState(\"\");\n  const [codeError, setCodeError] = React.useState(\"\");\n\n  const nameChange = (event) => {\n    setName(event.target.value);\n  };\n  const codeChange = (event) => {\n    setCode(event.target.value);\n  };\n\n  const setRequiredError = () => {\n    !name ? setNameError(\"Required\") : setNameError(\"\");\n    !code ? setCodeError(\"Required\") : setCodeError(\"\");\n  };\n\n  const setEmptyTextfields = () => {\n    setName(\"\");\n    setCode(\"\");\n\n    setNameError(\"\");\n    setCodeError(\"\");\n  };\n  const addButton = () => {\n    let temp = [...teachers];\n    if (name && code) {\n      if (temp) {\n        if (temp.findIndex((e) => e[1] === code) === -1)\n          temp.push([name, code]);\n        else {\n          setRequiredError();\n          setCodeError(\"Subject already exists\");\n          return;\n        }\n      } else temp = [[name, code]];\n\n      setTeachers(temp, docs.teachers);\n      setEmptyTextfields();\n    } else {\n      setRequiredError();\n    }\n  };\n\n  return (\n    <Card className={classes.root}>\n      <h3>Add Teacher</h3>\n      <div>\n        <TextField\n          className={classes.textField}\n          required\n          id=\"teacher-name\"\n          label=\"Teacher Name\"\n          variant=\"outlined\"\n          value={name}\n          onChange={nameChange}\n          error={!!nameError}\n          helperText={nameError}\n        />\n      </div>\n      <div>\n        <TextField\n          required\n          className={classes.textField}\n          id=\"teacher-code\"\n          label=\"Teacher Code\"\n          variant=\"outlined\"\n          error={!!codeError}\n          helperText={codeError}\n          value={code}\n          onChange={codeChange}\n          onKeyDown={(e) => {\n            if (e.keyCode === 13) addButton();\n          }}\n        />\n      </div>\n      <div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          onClick={addButton}\n        >\n          + Add Teacher\n        </Button>\n      </div>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport docs from \"../../constants/docs\";\n\nfunction createData(name, code, contantHrs) {\n  return { name, code, contantHrs };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Title\",\n  },\n  { id: \"code\", numeric: true, disablePadding: false, label: \"Code\" },\n  {\n    id: \"contantHrs\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Contact Hrs\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, selected, setSelected, subjects, setSubjects } = props;\n\n  const deleteRow = () => {\n    let temp = [...subjects];\n\n    selected.forEach((element) => {\n      let target = temp.findIndex((e) => e[1] === element);\n      temp.splice(target, 1);\n    });\n\n    setSubjects(temp, docs.subjects);\n    setSelected([]);\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Subject Table\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div></div>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  subjects: PropTypes.array,\n  setSubjects: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: \"100%\",\n    margin: 10,\n  },\n  paper: {\n    borderRadius: 20,\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\n// Subject Table Export\n\nexport default function SubjectTable({ subjects, setSubjects }) {\n  const rows = subjects\n    ? subjects.map((subject) => createData(subject[0], subject[1], subject[2]))\n    : createData(\"\", \"\", \"\");\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"code\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          setSelected={setSelected}\n          subjects={subjects}\n          setSubjects={setSubjects}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"subject\"\n            size=\"small\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code ? row.code : \"rowCode\"}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"left\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        align=\"right\"\n                        scope=\"row\"\n                      >\n                        {row.code}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.contantHrs}</TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport docs from \"../../constants/docs\";\n\nfunction createData(name, code) {\n  return { name, code };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Title\",\n  },\n  { id: \"code\", numeric: true, disablePadding: false, label: \"Code\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, selected, setSelected, sections, setSections } = props;\n\n  const deleteRow = () => {\n    let temp = [...sections];\n\n    selected.forEach((element) => {\n      let target = temp.findIndex((e) => e[1] === element);\n      temp.splice(target, 1);\n    });\n    setSections(temp, docs.sections);\n    setSelected([]);\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Section Table\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div></div>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  sections: PropTypes.array,\n  setSections: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: \"100%\",\n    margin: 10,\n  },\n  paper: {\n    borderRadius: 20,\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\n// Section Table Export Function\nexport default function SectionTable({ sections, setSections }) {\n  const rows = sections\n    ? sections.map((section) => createData(section[0], section[1]))\n    : [createData(\"\", \"\")];\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"code\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          setSelected={setSelected}\n          sections={sections}\n          setSections={setSections}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"subject\"\n            size=\"small\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code ? row.code : \"rowCode\"}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"left\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        align=\"right\"\n                        scope=\"row\"\n                      >\n                        {row.code}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport docs from \"../../constants/docs\";\n\nfunction createData(name, code) {\n  return { name, code };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"name\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Name\",\n  },\n  { id: \"code\", numeric: true, disablePadding: false, label: \"Code\" },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"right\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, selected, setSelected, teachers, setTeachers } = props;\n\n  const deleteRow = () => {\n    let temp = [...teachers];\n\n    selected.forEach((element) => {\n      let target = temp.findIndex((e) => e[1] === element);\n      temp.splice(target, 1);\n    });\n    setTeachers(temp, docs.teachers);\n    setSelected([]);\n  };\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Teacher Table\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div></div>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  teachers: PropTypes.array,\n  setTeachers: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: \"100%\",\n    margin: 10,\n  },\n  paper: {\n    borderRadius: 20,\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\nexport default function TeacherTable({ teachers, setTeachers }) {\n  const rows = teachers\n    ? teachers.map((teacher) => createData(teacher[0], teacher[1]))\n    : [createData(\"\", \"\")];\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"code\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.code);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, code) => {\n    const selectedIndex = selected.indexOf(code);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, code);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (name) => selected.indexOf(name) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          setSelected={setSelected}\n          teachers={teachers}\n          setTeachers={setTeachers}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"subject\"\n            size=\"small\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.code);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.code)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.code ? row.code : \"rowCode\"}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"left\" padding=\"none\">\n                        {row.name}\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        align=\"right\"\n                        scope=\"row\"\n                      >\n                        {row.code}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Card,\n  CardContent,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 10,\n    borderRadius: 20,\n  },\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"5% 10%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"space-around\",\n    },\n  },\n  textField: {\n    margin: 5,\n    minWidth: 200,\n  },\n  button: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: \"5%\",\n    },\n  },\n}));\n\nconst lectureArrangement = [[\"1\"], [\"1 - 1\", \"2\"], [\"1 - 1 - 1\", \"2 - 1\"]];\nexport default function LectureInput({\n  lectures,\n  setLectures,\n  subjects,\n  sections,\n  teachers,\n}) {\n  const classes = useStyles();\n  const [subject, setsubject] = useState(\"\");\n  const [section, setsection] = useState(\"\");\n  const [teacher, setteacher] = useState(\"\");\n  const [lectureArr, setlectureArr] = useState(\"\");\n\n  const [subjectError, setsubjectError] = useState(\"\");\n  const [sectionError, setsectionError] = useState(\"\");\n  const [teacherError, setteacherError] = useState(\"\");\n  const [lecturearrError, setlecturearrError] = useState(\"\");\n\n  const subjectChange = (event) => {\n    setlectureArr(\"\");\n    setsubject(event.target.value);\n  };\n\n  const sectionChange = (event) => {\n    setsection(event.target.value);\n  };\n\n  const teacherChange = (event) => {\n    setteacher(event.target.value);\n  };\n\n  const lecturesChange = (event) => {\n    setlectureArr(event.target.value);\n  };\n\n  const setRequiredError = () => {\n    !subject ? setsubjectError(\"Required\") : setsubjectError(\"\");\n    !teacher ? setteacherError(\"Required\") : setteacherError(\"\");\n    !section ? setsectionError(\"Required\") : setsectionError(\"\");\n    !lectureArr ? setlecturearrError(\"Required\") : setlecturearrError(\"\");\n  };\n\n  const setEmptyTextfields = () => {\n    setlectureArr(\"\");\n    setsubject(\"\");\n    setteacher(\"\");\n    setsection(\"\");\n\n    setsubjectError(\"\");\n    setteacherError(\"\");\n    setsectionError(\"\");\n    setlecturearrError(\"\");\n  };\n\n  const addButton = () => {\n    if (subject && teacher && section && lectureArr) {\n      let temp = [...lectures];\n      \n      if (lectures) {\n        // if (\n        //   temp.findIndex(\n        //     (e) =>\n        //       e[4] === teacher + section ||\n        //       (e[1] === section && e[2] === subject)\n        //   ) === -1\n        // )\n          temp.push([teacher, section, subject, lectureArr, teacher + section]);\n        // else {\n        //   setRequiredError();\n        //   setteacherError(\"Lecture already exists\");\n        //   setsubjectError(\"Lecture already exists\");\n        //   setsectionError(\"Lecture already exists\");\n        //   return;\n        // }\n      } else\n        temp = [[teacher, section, subject, lectureArr, teacher + section]];\n\n      setLectures(temp, docs.lectures);\n      // setEmptyTextfields();\n      console.log(\"added ...\")\n    } else setRequiredError();\n  };\n\n  const selectedIndex = (array, element, index) =>\n    array[array.findIndex((e) => e[index] === element)];\n\n  const subjectIndex = selectedIndex(subjects, subject, 1);\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <h3 style={{ textAlign: \"left\" }}>Add Lectures</h3>\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"teacher\"\n            label=\"Teacher\"\n            select\n            required\n            error={!!teacherError}\n            helperText={teacherError}\n            onChange={teacherChange}\n            value={teacher}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {teachers.map((option) => (\n              <MenuItem\n                key={option[1] ? option[1] : \"teacher\"}\n                value={option[0]}\n              >\n                {option[0]}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"section\"\n            label=\"Section\"\n            select\n            required\n            error={!!sectionError}\n            helperText={sectionError}\n            onChange={sectionChange}\n            value={section}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {sections.map((option) => (\n              <MenuItem\n                key={option[1] ? option[1] : \"section\"}\n                value={option[1]}\n              >\n                {option[1]}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"subject\"\n            label=\"Subject\"\n            select\n            required\n            error={!!subjectError}\n            helperText={subjectError}\n            onChange={subjectChange}\n            value={subject}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {subjects.map((option) => (\n              <MenuItem\n                key={option[1] ? option[1] : \"subject\"}\n                value={option[1]}\n              >\n                {option[1]}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"lecture\"\n            label=\"Lecture Arrangement\"\n            select\n            required\n            error={!!lecturearrError}\n            helperText={lecturearrError}\n            onChange={lecturesChange}\n            value={lectureArr}\n            disabled={!subject}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) addButton();\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {subject && subjectIndex ? (\n              lectureArrangement[subjectIndex[2] - 1].map((option) => (\n                <MenuItem key={option ? option : \"lecture\"} value={option}>\n                  {option}\n                </MenuItem>\n              ))\n            ) : (\n              <MenuItem></MenuItem>\n            )}\n          </TextField>\n        </div>\n\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          onClick={addButton}\n        >\n          + Add Lecture\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport docs from \"../../constants/docs\";\n\nfunction createData(teacher, section, subject, arrangement, lectureID) {\n  return { teacher, section, subject, arrangement, lectureID };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"teacher\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Teacher\",\n  },\n  { id: \"section\", numeric: true, disablePadding: false, label: \"Section\" },\n  {\n    id: \"subject\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Subject\",\n  },\n  //   {\n  //     id: \"arrangement\",\n  //     numeric: true,\n  //     disablePadding: false,\n  //     label: \"Arrangement\",\n  //   },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={\n              !headCell.numeric\n                ? \"left\"\n                : headCell.id === \"section\"\n                ? \"center\"\n                : \"right\"\n            }\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const { numSelected, selected, setSelected, lectures, setLectures } = props;\n\n  const deleteRow = () => {\n    let temp = [...lectures];\n\n    selected.forEach((element) => {\n      let target = temp.findIndex((e) => e[4] === element);\n      temp.splice(target, 1);\n    });\n\n    setLectures(temp, docs.lectures);\n    setSelected([]);\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Lecture Table\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div></div>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  lectures: PropTypes.array,\n  setLectures: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: \"100%\",\n    margin: 10,\n  },\n  paper: {\n    borderRadius: 20,\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\n// Lecture Table Export\nexport default function LectureTable({ lectures, setLectures }) {\n  const rows = lectures\n    ? lectures.map((lecture) =>\n        createData(lecture[0], lecture[1], lecture[2], lecture[3], lecture[4])\n      )\n    : [createData(\"\", \"\", \"\", \"\", \"\")];\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"lectureID\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.lectureID);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, lectureID) => {\n    const selectedIndex = selected.indexOf(lectureID);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, lectureID);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (element) => selected.indexOf(element) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          setSelected={setSelected}\n          lectures={lectures}\n          setLectures={setLectures}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"teacher\"\n            size=\"small\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.lectureID);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.lectureID)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.lectureID ? row.lectureID : \"rowlectureID\"}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"left\" padding=\"none\">\n                        {row.teacher}\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        align=\"center\"\n                        scope=\"row\"\n                      >\n                        {row.section}\n                      </TableCell>\n                      <TableCell align=\"right\">{row.subject}</TableCell>\n                      {/* <TableCell align=\"right\">{row.arrangement}</TableCell> */}\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 50]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React, { useState } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  TextField,\n  Card,\n  CardContent,\n  Button,\n  MenuItem,\n} from \"@material-ui/core\";\nimport docs from \"../../constants/docs\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    minWidth: 275,\n    margin: 10,\n    borderRadius: 20,\n  },\n  content: {\n    [theme.breakpoints.down(\"sm\")]: {\n      padding: \"5% 10%\",\n    },\n    [theme.breakpoints.up(\"md\")]: {\n      display: \"flex\",\n      justifyContent: \"center\",\n    },\n  },\n  textField: {\n    margin: 5,\n    minWidth: 200,\n    [theme.breakpoints.up(\"md\")]: {\n      minWidth: 150,\n    },\n  },\n  button: {\n    [theme.breakpoints.up(\"sm\")]: {\n      marginLeft: \"5%\",\n    },\n  },\n}));\n\nexport default function WorkingtimeInput({\n  workingTime,\n  setworkingTime,\n  sections,\n}) {\n  const classes = useStyles();\n\n  const [day, setday] = useState(\"\");\n  const [period, setperiod] = useState(\"\");\n  // const [room, setroom] = useState(sections.length);\n\n  const [dayError, setdayError] = useState(\"\");\n  const [periodError, setperiodError] = useState(\"\");\n\n  const dayChange = (event) => {\n    setday(event.target.value);\n  };\n\n  const periodChange = (event) => {\n    setperiod(event.target.value);\n  };\n  // const roomChange = (event) => {\n  //   setroom(event.target.value);\n  // };\n\n  const setRequiredError = () => {\n    !day ? setdayError(\"Required\") : setdayError(\"\");\n    !period ? setperiodError(\"Required\") : setperiodError(\"\");\n  };\n\n  const setEmptyTextfields = () => {\n    setday(\"\");\n    setperiod(\"\");\n\n    setdayError(\"\");\n    setperiodError(\"\");\n  };\n\n  const addButton = () => {\n    if (day && period) {\n      let temp = { ...workingTime };\n      temp[day] = period;\n      // temp = temp.filter((value) => value !== day);\n      setworkingTime(temp, docs.workingTime);\n\n      setEmptyTextfields();\n    } else setRequiredError();\n  };\n\n  return (\n    <Card className={classes.root}>\n      <CardContent className={classes.content}>\n        <h3 style={{ textAlign: \"left\" }}>Working Days & Periods</h3>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"day\"\n            label=\"Day\"\n            select\n            required\n            error={!!dayError}\n            helperText={dayError}\n            onChange={dayChange}\n            value={day}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {Object.entries(workingTime)\n              .filter((e) => e[1] === 0)\n              .map((option) => (\n                <MenuItem key={option[0]} value={option[0]}>\n                  {option[0]}\n                </MenuItem>\n              ))}\n          </TextField>\n        </div>\n\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"periods\"\n            label=\"Periods(hr)\"\n            select\n            required\n            error={!!periodError}\n            helperText={periodError}\n            onChange={periodChange}\n            value={period}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) addButton();\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {[1, 2, 3, 4, 5, 6, 7].map((option) => (\n              <MenuItem key={option} value={option}>\n                {option}\n              </MenuItem>\n            ))}\n          </TextField>\n        </div>\n        <div>\n          <TextField\n            type=\"number\"\n            className={classes.textField}\n            id=\"days\"\n            label=\"Rooms\"\n            select\n            required\n            // onChange={roomChange}\n            value={sections.length}\n            onKeyDown={(e) => {\n              if (e.keyCode === 13) addButton();\n            }}\n            InputLabelProps={{\n              shrink: true,\n            }}\n            variant=\"outlined\"\n          >\n            {\n              <MenuItem key={\"rooms\"} value={sections.length}>\n                {sections.length}\n              </MenuItem>\n            }\n          </TextField>\n        </div>\n        <Button\n          className={classes.button}\n          variant=\"contained\"\n          color=\"primary\"\n          size=\"medium\"\n          onClick={addButton}\n        >\n          +Add\n        </Button>\n      </CardContent>\n    </Card>\n  );\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport clsx from \"clsx\";\nimport { lighten, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TablePagination from \"@material-ui/core/TablePagination\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport TableSortLabel from \"@material-ui/core/TableSortLabel\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Checkbox from \"@material-ui/core/Checkbox\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Tooltip from \"@material-ui/core/Tooltip\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport docs from \"../../constants/docs\";\n\nfunction createData(day, lectureCount) {\n  return { day, lectureCount };\n}\n\nfunction descendingComparator(a, b, orderBy) {\n  if (b[orderBy] < a[orderBy]) {\n    return -1;\n  }\n  if (b[orderBy] > a[orderBy]) {\n    return 1;\n  }\n  return 0;\n}\n\nfunction getComparator(order, orderBy) {\n  return order === \"desc\"\n    ? (a, b) => descendingComparator(a, b, orderBy)\n    : (a, b) => -descendingComparator(a, b, orderBy);\n}\n\nfunction stableSort(array, comparator) {\n  const stabilizedThis = array.map((el, index) => [el, index]);\n  stabilizedThis.sort((a, b) => {\n    const order = comparator(a[0], b[0]);\n    if (order !== 0) return order;\n    return a[1] - b[1];\n  });\n  return stabilizedThis.map((el) => el[0]);\n}\n\nconst headCells = [\n  {\n    id: \"day\",\n    numeric: false,\n    disablePadding: true,\n    label: \"Day\",\n  },\n  {\n    id: \"lectureCount\",\n    numeric: true,\n    disablePadding: false,\n    label: \"Lectures\",\n  },\n];\n\nfunction EnhancedTableHead(props) {\n  const {\n    classes,\n    onSelectAllClick,\n    order,\n    orderBy,\n    numSelected,\n    rowCount,\n    onRequestSort,\n  } = props;\n  const createSortHandler = (property) => (event) => {\n    onRequestSort(event, property);\n  };\n\n  return (\n    <TableHead>\n      <TableRow>\n        <TableCell padding=\"checkbox\">\n          <Checkbox\n            indeterminate={numSelected > 0 && numSelected < rowCount}\n            checked={rowCount > 0 && numSelected === rowCount}\n            onChange={onSelectAllClick}\n            inputProps={{ \"aria-label\": \"select all desserts\" }}\n          />\n        </TableCell>\n        {headCells.map((headCell) => (\n          <TableCell\n            key={headCell.id}\n            align={headCell.numeric ? \"center\" : \"left\"}\n            padding={headCell.disablePadding ? \"none\" : \"default\"}\n            sortDirection={orderBy === headCell.id ? order : false}\n          >\n            <TableSortLabel\n              active={orderBy === headCell.id}\n              direction={orderBy === headCell.id ? order : \"asc\"}\n              onClick={createSortHandler(headCell.id)}\n            >\n              {headCell.label}\n              {orderBy === headCell.id ? (\n                <span className={classes.visuallyHidden}>\n                  {order === \"desc\" ? \"sorted descending\" : \"sorted ascending\"}\n                </span>\n              ) : null}\n            </TableSortLabel>\n          </TableCell>\n        ))}\n      </TableRow>\n    </TableHead>\n  );\n}\n\nEnhancedTableHead.propTypes = {\n  classes: PropTypes.object.isRequired,\n  numSelected: PropTypes.number.isRequired,\n  onRequestSort: PropTypes.func.isRequired,\n  onSelectAllClick: PropTypes.func.isRequired,\n  order: PropTypes.oneOf([\"asc\", \"desc\"]).isRequired,\n  orderBy: PropTypes.string.isRequired,\n  rowCount: PropTypes.number.isRequired,\n};\n\nconst useToolbarStyles = makeStyles((theme) => ({\n  root: {\n    paddingLeft: theme.spacing(2),\n    paddingRight: theme.spacing(1),\n  },\n  highlight:\n    theme.palette.type === \"light\"\n      ? {\n          color: theme.palette.secondary.main,\n          backgroundColor: lighten(theme.palette.secondary.light, 0.85),\n        }\n      : {\n          color: theme.palette.text.primary,\n          backgroundColor: theme.palette.secondary.dark,\n        },\n  title: {\n    flex: \"1 1 100%\",\n  },\n}));\n\nconst EnhancedTableToolbar = (props) => {\n  const classes = useToolbarStyles();\n  const {\n    numSelected,\n    selected,\n    setSelected,\n    workingTime,\n    setworkingTime,\n  } = props;\n\n  const deleteRow = () => {\n    let temp = { ...workingTime };\n    console.log(selected);\n    selected.forEach((element) => {\n      temp[element] = 0;\n    });\n    setworkingTime(temp, docs.workingTime);\n    setSelected([]);\n  };\n\n  return (\n    <Toolbar\n      className={clsx(classes.root, {\n        [classes.highlight]: numSelected > 0,\n      })}\n    >\n      {numSelected > 0 ? (\n        <Typography\n          className={classes.title}\n          color=\"inherit\"\n          variant=\"subtitle1\"\n          component=\"div\"\n        >\n          {numSelected} selected\n        </Typography>\n      ) : (\n        <Typography\n          className={classes.title}\n          variant=\"h6\"\n          id=\"tableTitle\"\n          component=\"div\"\n        >\n          Working Days\n        </Typography>\n      )}\n\n      {numSelected > 0 ? (\n        <Tooltip title=\"Delete\">\n          <IconButton onClick={deleteRow} aria-label=\"delete\">\n            <DeleteIcon />\n          </IconButton>\n        </Tooltip>\n      ) : (\n        <div></div>\n      )}\n    </Toolbar>\n  );\n};\n\nEnhancedTableToolbar.propTypes = {\n  numSelected: PropTypes.number.isRequired,\n  selected: PropTypes.array,\n  setSelected: PropTypes.func,\n  workingTime: PropTypes.object,\n  setworkingTime: PropTypes.func,\n};\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    // width: \"100%\",\n    margin: 10,\n  },\n  paper: {\n    borderRadius: 20,\n    width: \"100%\",\n    marginBottom: theme.spacing(2),\n  },\n  table: {\n    // minWidth: 750,\n  },\n  visuallyHidden: {\n    border: 0,\n    clip: \"rect(0 0 0 0)\",\n    height: 1,\n    margin: -1,\n    overflow: \"hidden\",\n    padding: 0,\n    position: \"absolute\",\n    top: 20,\n    width: 1,\n  },\n}));\n\n// Section Table Export Function\nexport default function WorkingtimeTable({ workingTime, setworkingTime }) {\n  const rows = Object.entries(workingTime)\n    .filter((e) => e[1] !== 0)\n    .map((time) => createData(time[0], time[1]));\n\n  const classes = useStyles();\n  const [order, setOrder] = React.useState(\"asc\");\n  const [orderBy, setOrderBy] = React.useState(\"lectureCount\");\n  const [selected, setSelected] = React.useState([]);\n  const [page, setPage] = React.useState(0);\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\n\n  const handleRequestSort = (event, property) => {\n    const isAsc = orderBy === property && order === \"asc\";\n    setOrder(isAsc ? \"desc\" : \"asc\");\n    setOrderBy(property);\n  };\n\n  const handleSelectAllClick = (event) => {\n    if (event.target.checked) {\n      const newSelecteds = rows.map((n) => n.day);\n      setSelected(newSelecteds);\n      return;\n    }\n    setSelected([]);\n  };\n\n  const handleClick = (event, element) => {\n    const selectedIndex = selected.indexOf(element);\n    let newSelected = [];\n\n    if (selectedIndex === -1) {\n      newSelected = newSelected.concat(selected, element);\n    } else if (selectedIndex === 0) {\n      newSelected = newSelected.concat(selected.slice(1));\n    } else if (selectedIndex === selected.length - 1) {\n      newSelected = newSelected.concat(selected.slice(0, -1));\n    } else if (selectedIndex > 0) {\n      newSelected = newSelected.concat(\n        selected.slice(0, selectedIndex),\n        selected.slice(selectedIndex + 1)\n      );\n    }\n\n    setSelected(newSelected);\n  };\n\n  const handleChangePage = (event, newPage) => {\n    setPage(newPage);\n  };\n\n  const handleChangeRowsPerPage = (event) => {\n    setRowsPerPage(parseInt(event.target.value, 10));\n    setPage(0);\n  };\n\n  const isSelected = (element) => selected.indexOf(element) !== -1;\n\n  const emptyRows =\n    rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\n\n  return (\n    <div className={classes.root}>\n      <Paper className={classes.paper}>\n        <EnhancedTableToolbar\n          numSelected={selected.length}\n          selected={selected}\n          setSelected={setSelected}\n          workingTime={workingTime}\n          setworkingTime={setworkingTime}\n        />\n        <TableContainer>\n          <Table\n            className={classes.table}\n            aria-labelledby=\"subject\"\n            size=\"small\"\n            aria-label=\"enhanced table\"\n          >\n            <EnhancedTableHead\n              classes={classes}\n              numSelected={selected.length}\n              order={order}\n              orderBy={orderBy}\n              onSelectAllClick={handleSelectAllClick}\n              onRequestSort={handleRequestSort}\n              rowCount={rows.length}\n            />\n            <TableBody>\n              {stableSort(rows, getComparator(order, orderBy))\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\n                .map((row, index) => {\n                  const isItemSelected = isSelected(row.day);\n                  const labelId = `enhanced-table-checkbox-${index}`;\n\n                  return (\n                    <TableRow\n                      hover\n                      onClick={(event) => handleClick(event, row.day)}\n                      role=\"checkbox\"\n                      aria-checked={isItemSelected}\n                      tabIndex={-1}\n                      key={row.day ? row.day : \"rowDay\"}\n                      selected={isItemSelected}\n                    >\n                      <TableCell padding=\"checkbox\">\n                        <Checkbox\n                          checked={isItemSelected}\n                          inputProps={{ \"aria-labelledby\": labelId }}\n                        />\n                      </TableCell>\n                      <TableCell align=\"left\" padding=\"none\">\n                        {row.day}\n                      </TableCell>\n                      <TableCell\n                        component=\"th\"\n                        id={labelId}\n                        align=\"center\"\n                        scope=\"row\"\n                      >\n                        {row.lectureCount}\n                      </TableCell>\n                    </TableRow>\n                  );\n                })}\n              {emptyRows > 0 && (\n                <TableRow style={{ height: 33 * emptyRows }}>\n                  <TableCell colSpan={6} />\n                </TableRow>\n              )}\n            </TableBody>\n          </Table>\n        </TableContainer>\n        <TablePagination\n          rowsPerPageOptions={[5, 10, 25]}\n          component=\"div\"\n          count={rows.length}\n          rowsPerPage={rowsPerPage}\n          page={page}\n          onChangePage={handleChangePage}\n          onChangeRowsPerPage={handleChangeRowsPerPage}\n        />\n      </Paper>\n    </div>\n  );\n}\n","import React from \"react\";\nimport { withStyles, makeStyles } from \"@material-ui/core/styles\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\n\nconst StyledTableCell = withStyles((theme) => ({\n  head: {\n    backgroundColor: theme.palette.common.black,\n    color: theme.palette.common.white,\n  },\n  body: {\n    fontSize: 14,\n  },\n}))(TableCell);\n\nconst StyledTableRow = withStyles((theme) => ({\n  root: {\n    \"&:nth-of-type(odd)\": {\n      backgroundColor: theme.palette.action.hover,\n    },\n  },\n}))(TableRow);\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    margin: theme.spacing(2),\n  },\n  table: {\n    minWidth: 360,\n  },\n}));\n\nconst weekDays = [\"MON\", \"TUE\", \"WED\", \"THU\", \"FRI\", \"SAT\"];\n\nexport default function Timetable({ timeTable, section }) {\n  const classes = useStyles();\n\n  return (\n    <TableContainer className={classes.root} component={Paper}>\n      <Table className={classes.table} aria-label=\"customized table\">\n        <TableHead>\n          <TableRow>\n            <StyledTableCell key={\"sec\" + section}>\n              Section {section}\n            </StyledTableCell>\n            {timeTable ? (\n              timeTable[0].map((day, i) => (\n                <StyledTableCell key={\"lectures\" + section + i} align=\"right\">\n                  Lecture {i + 1}\n                </StyledTableCell>\n              ))\n            ) : (\n              <StyledTableCell key={\"lectures\" + section}></StyledTableCell>\n            )}\n          </TableRow>\n        </TableHead>\n        <TableBody>\n          {timeTable.map((row, i) => (\n            <StyledTableRow key={i + section}>\n              <StyledTableCell\n                key={weekDays[i] + section}\n                component=\"th\"\n                scope=\"column\"\n              >\n                {weekDays[i]}\n              </StyledTableCell>\n              {row.map((r, j) => (\n                <StyledTableCell key={r + j + section} align=\"right\">\n                  {r ? r : \"FREE\"}\n                </StyledTableCell>\n              ))}\n            </StyledTableRow>\n          ))}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import React from 'react';\nimport Timetable from './timetable';\nimport { makeStyles } from '@material-ui/core/styles';\n\nconst useStyles = makeStyles((theme) => ({\n  cardHolder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'space-evenly',\n    marginTop: 10,\n  },\n}));\n\nexport default function GenerateTimetable({ timetable }) {\n  const classes = useStyles();\n  return (\n    <div className={classes.cardHolder}>\n      {timetable ? (\n        Object.keys(timetable)\n          .sort()\n          .map((sec, i) => (\n            <Timetable timeTable={timetable[sec]} section={sec} key={sec} />\n          ))\n      ) : (\n        <div></div>\n      )}\n    </div>\n  );\n}\n","import React, { useState, useCallback } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport PrimaryAppBar from '../components/Appbar';\nimport SubjectInput from '../components/InputCards/subjectInput';\nimport SectionInput from '../components/InputCards/sectionInput';\nimport TeacherInput from '../components/InputCards/teacherInput';\nimport SubjectTable from '../components/Tables/subjectTable';\nimport SectionTable from '../components/Tables/sectionTable';\nimport TeacherTable from '../components/Tables/teacherTable';\nimport LectureInput from '../components/lectures/lectureInput';\nimport LectureTable from '../components/lectures/lectureTable';\nimport WorkingtimeInput from '../components/InputCards/workingtimeInput';\nimport WorkingtimeTable from '../components/Tables/workingtimeTable';\nimport { Button, CircularProgress } from '@material-ui/core';\nimport GenerateTimetable from '../components/GenerateTimetable';\nimport './HomeScreen.css';\nimport docs from '../constants/docs';\nimport firebase from 'firebase';\n\nconst useStyles = makeStyles((theme) => ({\n  cardHolder: {\n    display: 'flex',\n    flexFlow: 'row wrap',\n    justifyContent: 'space-evenly',\n    marginTop: 70,\n    [theme.breakpoints.up('sm')]: {\n      marginTop: 80,\n    },\n  },\n  lectures: {\n    width: '100%',\n    margin: '0% 5%',\n  },\n  genButton: {\n    marginBottom: 25,\n  },\n  wrapper: {\n    position: 'relative',\n    display: 'flex',\n    justifyContent: 'center',\n  },\n  buttonProgress: {\n    position: 'absolute',\n    top: '3%',\n  },\n  footer: {\n    marginBottom: 30,\n    fontSize: '1.2rem',\n    letterSpacing: '0.3rem',\n    textAlign: 'center',\n    // textShadow: '0 0 .5rem black',\n    color: 'white',\n    '& a': {\n      color: '#791E94',\n      '&:hover': {\n        fontWeight: 700,\n      },\n    },\n  },\n}));\n\nconst weekSchedule = { MON: 0, TUE: 0, WED: 0, THU: 0, FRI: 0, SAT: 0 };\n\nconst HomeScreen = () => {\n  const db = firebase.firestore();\n  const userRef = db.collection(firebase.auth().currentUser.uid);\n  const classes = useStyles();\n\n  const [subjects, setSubjects] = useState([]);\n  const [sections, setSections] = useState([]);\n  const [teachers, setTeachers] = useState([]);\n  const [lectures, setLectures] = useState([]);\n  const [workingTime, setworkingTime] = useState(weekSchedule);\n  const [loading, setloading] = useState(false);\n  const [timetable, setTimetable] = useState(undefined);\n\n  const updateDB = (sub, docType) => {\n    switch (docType) {\n      case 'subjects':\n        setSubjects(sub);\n        break;\n      case 'sections':\n        setSections(sub);\n        break;\n      case 'teachers':\n        setTeachers(sub);\n        break;\n      case 'lectures':\n        setLectures(sub);\n        break;\n      case 'workingTime':\n        setworkingTime(sub);\n        break;\n      default:\n        console.error('Wrong Document');\n    }\n    userRef\n      .doc(docType)\n      .set(docType === docs.workingTime ? sub : { ...Object(sub) })\n      .then((e) => console.log('saved'))\n      .catch((e) => console.error('error', e));\n  };\n\n  const fetchTimetable = useCallback(async () => {\n    const db = firebase.firestore();\n    const userRef = db.collection(firebase.auth().currentUser.uid);\n\n    const temp = {};\n\n    await userRef\n      .doc(docs.timeTable)\n      .collection(docs.timeTable)\n      .onSnapshot((snapshot) => {\n        if (!snapshot.empty) {\n          const lecSec = [];\n          snapshot.forEach((snap) => {\n            temp[snap.id] = Object.values(snap.data());\n            lecSec.push(snap.id);\n          });\n          setTimetable(temp);\n        }\n      });\n  }, []);\n\n  const fetchRecords = useCallback(async () => {\n    const db = firebase.firestore();\n    const userRef = db.collection(firebase.auth().currentUser.uid);\n    userRef\n      .get()\n      .then((snapShot) => {\n        snapShot.forEach((doc) => {\n          const records =\n            doc.id === docs.workingTime\n              ? doc.data()\n              : Object.values(doc.data());\n          switch (doc.id) {\n            case docs.subjects:\n              setSubjects(records);\n              break;\n            case docs.sections:\n              setSections(records);\n              break;\n            case docs.teachers:\n              setTeachers(records);\n              break;\n            case docs.lectures:\n              setLectures(records);\n              break;\n            case docs.workingTime:\n              setworkingTime(records);\n              break;\n\n            default:\n              console.error('Wrong Document');\n          }\n        });\n      })\n      .catch((e) => console.log('err', e));\n  }, []);\n\n  React.useEffect(() => {\n    fetchRecords();\n    fetchTimetable();\n  }, [fetchRecords, fetchTimetable]);\n\n  const generateButton = () => {\n    const requestOptions = {\n      method: 'POST',\n      headers: { 'Content-Type': 'application/json' },\n      body: JSON.stringify({ userID: firebase.auth().currentUser.uid }),\n    };\n    setloading(true);\n    fetch('/generate', requestOptions)\n      .then((response) => response.json())\n      .then(async () => {\n        fetchTimetable();\n        setloading(false);\n      })\n      .catch((e) => {\n        console.log(e);\n        setloading(false);\n      });\n  };\n  // console.log(subjects);\n  // console.log(sections);\n  // console.log(teachers);\n  // console.log(lectures);\n  // console.log(workingTime);\n  // console.log(timetable);\n\n  return (\n    <div>\n      <PrimaryAppBar />\n      <div className={classes.cardHolder}>\n        <div>\n          <SubjectInput\n            className={classes.card}\n            subjects={subjects}\n            setSubjects={updateDB}\n            docs={docs}\n          />\n          <SubjectTable\n            subjects={subjects}\n            setSubjects={updateDB}\n            docType={docs}\n          />\n        </div>\n        <div>\n          <SectionInput\n            className={classes.card}\n            sections={sections}\n            setSections={updateDB}\n            docs={docs}\n          />\n          <SectionTable\n            sections={sections}\n            setSections={updateDB}\n            docs={docs}\n          />\n        </div>\n        <div>\n          <TeacherInput\n            className={classes.card}\n            teachers={teachers}\n            setTeachers={updateDB}\n            docs={docs}\n          />\n          <TeacherTable\n            teachers={teachers}\n            setTeachers={updateDB}\n            docs={docs}\n          />\n        </div>\n\n        <div className={classes.lectures}>\n          <LectureInput\n            lectures={lectures}\n            setLectures={updateDB}\n            docs={docs}\n            subjects={subjects}\n            sections={sections}\n            teachers={teachers}\n          />\n          <LectureTable\n            lectures={lectures}\n            setLectures={updateDB}\n            docs={docs}\n          />\n        </div>\n        <div>\n          <WorkingtimeInput\n            workingTime={workingTime}\n            setworkingTime={updateDB}\n            sections={sections}\n            docs={docs}\n          />\n          <WorkingtimeTable\n            workingTime={workingTime}\n            setworkingTime={updateDB}\n            docs={docs}\n          />\n        </div>\n      </div>\n      <div className={classes.wrapper}>\n        <Button\n          variant='contained'\n          color='secondary'\n          size='large'\n          className={classes.genButton}\n          onClick={generateButton}\n          disabled={!lectures.length || loading}\n        >\n          Generate Timetable\n        </Button>\n        {loading && (\n          <CircularProgress\n            color='secondary'\n            size={38}\n            className={classes.buttonProgress}\n          />\n        )}\n      </div>\n      <GenerateTimetable timetable={timetable} />\n      <div className={classes.footer}>\n        Made By <a href='https://github.com/GeoXhacker'>GeoXhacker</a> \n      </div>\n    </div>\n  );\n};\n\nexport default HomeScreen;\n","import React, { useState } from \"react\"\nimport \"./App.css\"\nimport \"tachyons\"\nimport LoginScreen from \"./Pages/LoginScreen\"\nimport HomeScreen from \"./Pages/HomeScreen\"\n\nconst App = () => {\n\tconst [isSigned, setIsSigned] = useState(false)\n\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t{!isSigned ? <LoginScreen setIsSigned={setIsSigned} /> : <HomeScreen />}\n\t\t</div>\n\t)\n}\n\nexport default App\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\"\nimport ReactDOM from \"react-dom\"\nimport \"./index.css\"\nimport App from \"./App\"\nimport * as serviceWorker from \"./serviceWorker\"\n\nReactDOM.render(\n\t<React.StrictMode>\n\t\t<App />\n\t</React.StrictMode>,\n\tdocument.getElementById(\"root\")\n)\n\nserviceWorker.unregister()\n"],"sourceRoot":""}